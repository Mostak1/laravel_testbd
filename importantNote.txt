
after finish css
npm run build
base64:3fER0L9mlV2uY+FlhGgeIz6DAwDvD735LGaTpreQ+24=
continue run css 
npm dev run

Route::resources([
    'photos' =&gt; PhotoController::class,
    'posts' =&gt; PostController::class,
]);
route setting 
Actions Handled By Resource Controller

Verb	    URI	                    Action	    Route Name
GET	        /photos	                index	    photos.index
GET	        /photos/create	        create	    photos.create
POST	    /photos	                store	    photos.store
GET	        /photos/{photo}	        show	    photos.show
GET	        /photos/{photo}/edit	edit	    photos.edit
PUT/PATCH	/photos/{photo}	        update	    photos.update
DELETE	    /photos/{photo}	        destroy	    photos.destroy

Enroll information 
Id Cat_id Student_id  Tranjection_methode Tran_id Status(default pending) Expair_Time 

detail model
details table
id,topic_id,question,answer,

in arry dea kaj krtehbe 
Using Third-Party Libraries (Optional):
There are various third-party libraries that simplify lazy loading, provide additional features, and offer better browser compatibility. Some popular libraries include:

LazyLoad: A lightweight library for lazy loading images and other elements.
Lozad.js: Another library for lazy loading images with a focus on performance.
AOS (Animate On Scroll): While primarily used for animations, AOS can also help trigger lazy loading when elements enter the viewport.




